services:
  postgres:
    image: postgres:15-alpine
    restart: always
    environment:
      POSTGRES_USERNAME: ${POSTGRES_USERNAME}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DATABASE: ${POSTGRES_DATABASE}
    ports:
      - "5432:5432"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 5s
      timeout: 5s
      retries: 5

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    depends_on:
      postgres:
        condition: service_healthy
    ports:
      - "8081:8081"
    environment:
      - POSTGRES_USERNAME = ${POSTGRES_USERNAME}
      - POSTGRES_HOST = ${POSTGRES_HOST}
      - POSTGRES_PASSWORD = ${POSTGRES_PASSWORD}
      - POSTGRES_DATABASE = ${POSTGRES_DATABASE}

  pinger:
    build:
      context: ./pinger
      dockerfile: Dockerfile
    depends_on:
      - backend
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "8080:80"
    depends_on:
      - backend

volumes:
  postgres_data: